{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","isStarted","setStart","isReversed","setReverse","sortBy","setSorted","className","copyGoodsList","sort","good1","good2","localeCompare","length","reverse","listForRender","map","good","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"oMAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmHaC,EAhHO,WACpB,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KA8CA,OACE,sBAAKC,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,mBAIEN,EASA,qCACE,oBACEM,UAAU,iBADZ,SAvCc,WACpB,IAAMC,EAAa,UAAOV,GAmB1B,OAjBAU,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQN,GACN,IAAK,QACH,OAAOK,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAITV,GACFK,EAAcM,UAGTN,EAsBEO,GAAgBC,KAAI,SAAAC,GAAI,OACvB,6BACGA,GADMA,QAMb,wBACEV,UAAU,eACVW,KAAK,SACLC,QArEM,WACdf,GAAYD,IAiEN,qBAQA,wBACEI,UAAU,eACVW,KAAK,SACLC,QAzEU,WAClBb,EAAU,UAqEJ,mBAQA,wBACEC,UAAU,eACVW,KAAK,SACLC,QA7EW,WACnBb,EAAU,WAyEJ,oBAQA,wBACEC,UAAU,eACVW,KAAK,SACLC,QAjFI,WACZf,GAAW,GACXE,EAAU,KA4EJ,sBA3CF,wBACEC,UAAU,eACVW,KAAK,SACLC,QAtDM,WACZjB,GAAUD,IAkDN,uBCrERmB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.5e2c9fab.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [isStarted, setStart] = useState(false);\n  const [isReversed, setReverse] = useState(false);\n  const [sortBy, setSorted] = useState('');\n\n  const start = () => {\n    setStart(!isStarted);\n  };\n\n  const reverse = () => {\n    setReverse(!isReversed);\n  };\n\n  const sortByAlpha = () => {\n    setSorted('alpha');\n  };\n\n  const sortByLength = () => {\n    setSorted('length');\n  };\n\n  const reset = () => {\n    setReverse(false);\n    setSorted('');\n  };\n\n  const listForRender = () => {\n    const copyGoodsList = [...goodsFromServer];\n\n    copyGoodsList.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'alpha':\n          return good1.localeCompare(good2);\n\n        case 'length':\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      copyGoodsList.reverse();\n    }\n\n    return copyGoodsList;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">\n        Goods\n      </h1>\n\n      {!isStarted ? (\n        <button\n          className=\"App__buttons\"\n          type=\"button\"\n          onClick={start}\n        >\n          Start\n        </button>\n      ) : (\n        <>\n          <ul\n            className=\"App__goodsList\"\n          >\n            {listForRender().map(good => (\n              <li key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n\n          <button\n            className=\"App__buttons\"\n            type=\"button\"\n            onClick={reverse}\n          >\n            Reverse\n          </button>\n\n          <button\n            className=\"App__buttons\"\n            type=\"button\"\n            onClick={sortByAlpha}\n          >\n            Alpha\n          </button>\n\n          <button\n            className=\"App__buttons\"\n            type=\"button\"\n            onClick={sortByLength}\n          >\n            Length\n          </button>\n\n          <button\n            className=\"App__buttons\"\n            type=\"button\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}